@page "/form2"
@page "/form2/{Id:int}"

@inject NavigationManager navigationManager
@inject SampleClient sampleClient

<AlertHub></AlertHub>
<Ready Value="employee">
    <IsReady>
        <SimplyForm @bind-Value="employee">
            <Tabs>
                <Tab Title="General">
                    <div class="row">
                        <div class="col-md-6">
                            <Field Name="FirstName" Text=""></Field>
                        </div>
                        <div class="col-md-6">
                            <Field Name="LastName" Text=""></Field>
                        </div>
                    </div>
                    <Field Name="FirstName" InputType="InputType.Multiline" ReadOnly="true" rows="10"></Field>
                    <Field Name="LastName" ReadOnly="true"></Field>
                    <Field Name="@nameof(Employee.Age)" Default="20" Format="#.#" />
                    <div>test</div>
                    <Field Name="Married" />
                    <Field Name="EmploymentDate" InputType="InputType.Calendar" />
                    <Field Name="AbsentPeriod" />
                    <Field Name="EmploymentStatus" Lookup="@Lookup.FromSearchy("mockmodels")" ReadOnly="true" />
                    <Field Name="Country" Lookup="@Lookup.FromSearchy("countries")" TypeAhead="3" />
                    <Field Name="BirthCountry" Lookup="@Lookup.FromSearchy("countries")" TypeAhead="1" Placeholder="Type a value!" />
                    <Field Name="Country" Lookup="@Lookup.FromSearchy("countries")" />
                    <Field Name="Roles" Lookup="@Lookup.FromSearchy("countries")"></Field>
                    <Field Name="Roles" InputType="InputType.Multiline"></Field>
                </Tab>
                <Tab Title="Album">
                    <Field Name="Photo" />
                </Tab>
                <Tab Title="Properties">
                    <Field Name="AdditionalValues"></Field>
                </Tab>
                <Tab Title="Salary">
                    <Field Name="Salary.Amount" />
                    <Field Name="Salary.Currency" />
                </Tab>
                <Tab Title="Leaves">
                    <Subform Name="Leaves">
                        <Columns>
                            <Field Text="Action">
                                <ColumnHeader Context="fieldContext">
                                    Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                                </ColumnHeader>
                                <ColumnValue Context="fieldContext">
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                                </ColumnValue>
                            </Field>
                            <Field Name="Reason" />
                            <Field Name="Days" />
                            <Field Name="Photo" />
                        </Columns>
                        <Form>
                            <Field Name="Photo" accept="image/*" size="1000000" />
                            <Field Name="Reason" />
                            <Field Name="Days" />
                        </Form>
                    </Subform>
                </Tab>
            </Tabs>
        </SimplyForm>

        <div class="container-fluid mt-5">
            <BusyButton class="btn btn-secondary">
                <Title>
                    Save
                </Title>
                <IfBusy>
                    <Confirm Title="Save" OnClick="result => OnConfirmSave(result, context)">
                        Are you sure you want to save this record?
                    </Confirm>
                </IfBusy>
            </BusyButton>
        </div>
        <p>Age: @employee?.Age</p>
        <p>Emp Status: @employee?.EmploymentStatus</p>
        <p>Country: @employee?.Country</p>
        <p>Photo: @employee?.Photo</p>
    </IsReady>
</Ready>

@code {

    Employee employee;
    bool ready;

    [Parameter]
    public int Id { get; set; }

    async protected override Task OnInitializedAsync()
    {
        var result = await sampleClient.GetById<Employee>("employees", 5);

        if (result.Success) employee = result.Response;

        //employee.Leaves = new List<Leave>();
        //{
        //    new Leave
        //    {
        //        Days = 1,
        //        Reason = "test"
        //    }
        //};
        employee.Roles = new List<string>
{
                "JO"
        };
        employee.Age = decimal.Parse("5.10000");
        employee.AbsentPeriod = new DateTime[] { DateTime.Now, DateTime.Now.AddDays(3) };

    }

    async Task OnSave(IBusyButton busyButton)
    {
        await Task.Delay(TimeSpan.FromSeconds(2));
        await busyButton.SetBusy(false);
        //if (apiResult.Success)
        //    navigationManager.NavigateTo("/");
    }

    async Task OnConfirmSave(bool result, IBusyButton busyButton)
    {
        if (result)
        {
            await Task.Delay(TimeSpan.FromSeconds(2));
        }

        await busyButton.SetBusy(false);
        //if (apiResult.Success)
        //    navigationManager.NavigateTo("/");
    }

}
